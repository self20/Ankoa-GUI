#:kivy 1.8.0
#:import session app.settings.conf_dict.session

# ---------- REMOTE POPUP ----------
<RemotePopup>:
    size_hint: .7, .36
    auto_dismiss: False
    title: 'Remote session'
    GridLayout:
        cols: 1
        spacing: 5
        row_force_default: True
        row_default_height: 50

        # ---------- SSH SETTINGS ----------
        BoxLayout:
            padding: 8
            canvas:
                Color:
                    rgba: 47 / 255., 167 / 255., 212 / 255., .1
                Rectangle:
                    size: self.size
                    pos: self.pos

            # --- Check SSH Settings ---
            Switch:
                id: remote
                size_hint_x: .20
                touch_control: False
                active:
                    True if root.ids.ssh_host.text and\
                    root.ids.ssh_port.text and\
                    root.ids.ssh_username.text and\
                    root.ids.ssh_passwd.text else False
            Label:
                size_hint_x: .05

            # --- SSH Settings Label ---
            Label:
                text: 'SSH Settings'
                size_hint_x: .25

            # --- Clear SSH ---
            ActionButton:
                icon: 'data/icon/refresh.png'
                size_hint_x: .10
                on_press:
                    root.ids.ssh_host.text = '';\
                    root.ids.ssh_port.text = '';\
                    root.ids.ssh_username.text = '';\
                    root.ids.ssh_passwd.text = ''

            BoxLayout:

                # --- Hostname / IP ---
                TextInput:
                    size_hint_x: .4
                    hint_text: 'Hostname / IP'
                    text: session['ssh_host']
                    id: ssh_host
                    padding: 8, 8, 8, 0
                    multiline: False

                # --- SSH Port ---
                TextInput:
                    size_hint_x: .2
                    hint_text: 'Port'
                    text: session['ssh_port']
                    id: ssh_port
                    padding: 8, 8, 8, 0
                    multiline: False
                    input_filter: 'int'

                # --- SSH Username ---
                TextInput:
                    size_hint_x: .3
                    hint_text: 'Username'
                    text: session['ssh_username']
                    id: ssh_username
                    padding: 8, 8, 8, 0
                    multiline: False

                # --- SSH Password ---
                TextInput:
                    size_hint_x: .3
                    hint_text: 'Password'
                    text: session['ssh_passwd']
                    id: ssh_passwd
                    padding: 8, 8, 8, 0
                    multiline: False

        # ---------- REMOTE FOLDER ----------
        BoxLayout:
            padding: 8
            canvas:
                Color:
                    rgba: 47 / 255., 167 / 255., 212 / 255., .2
                Rectangle:
                    size: self.size
                    pos: self.pos

            # --- Check Remote ---
            Switch:
                id: M_folder
                size_hint_x: .20
                touch_control: False
                active:
                    True if root.ids.remote_folder.text else\
                    False
            Label:
                size_hint_x: .05

            # --- Remote Label ---
            Label:
                text: 'Remote Folder'
                size_hint_x: .25

            # --- Clear Remote ---
            ActionButton:
                icon: 'data/icon/refresh.png'
                size_hint_x: .10
                on_press: root.ids.remote_folder.text = ''

            # --- Remote Input ---
            TextInput:
                hint_text: 'ex: /home/user/torrents/'
                text: session['remote_folder']
                id: remote_folder
                padding: 8, 8, 8, 0
                multiline: False

        # ---------- LOCAL FOLDER ----------
        BoxLayout:
            padding: 8
            canvas:
                Color:
                    rgba: 47 / 255., 167 / 255., 212 / 255., .1
                Rectangle:
                    size: self.size
                    pos: self.pos

            # --- Check Local ---
            Switch:
                id: L_folder
                size_hint_x: .20
                touch_control: False
                active:
                    True if root.ids.local_folder.text and\
                    os.path.exists(root.ids.local_folder.text) else\
                    False
            Label:
                size_hint_x: .05

            # --- Local Label ---
            Label:
                text: 'Local Folder'
                size_hint_x: .25

            # --- Select Local ---
            ActionButton:
                size_hint_x: .10
                icon: 'data/icon/add.png'
                on_press:
                    filter['request'] = 'folder';\
                    filter['folder_type'] = 'local_folder';\
                    app.main_popup('ManagerPopup()')

            # --- Local Input ---
            TextInput:
                hint_text: 'ex: /home/user/tmp/'
                text: session['local_folder'] or app.local_folder
                id: local_folder
                padding: 8, 8, 8, 0
                multiline: False

        BoxLayout:
            padding: 8

            # --- SAVE SETTINGS ---
            Button:
                text: 'Save'
                on_press:
                    app.save_session(root) if\
                    root.ids.remote.active is True and\
                    root.ids.M_folder.active is True and\
                    root.ids.L_folder.active is True else\
                    app.main_popup('ErrorPopup()')

            # --- RESET SETTINGS ---
            Button:
                text: 'Reset'
                on_press:
                    app.reset_session(root) if\
                    root.ids.M_folder.active is True and\
                    root.ids.L_folder.active is True else\
                    app.main_popup('ErrorPopup()')

            # --- MOUNT FOLDER ---
            Button:
                text: 'Mount'
                on_press:
                    app.manage_remote(self.text) if\
                    root.ids.remote.active is True and\
                    root.ids.M_folder.active is True and\
                    root.ids.L_folder.active is True else\
                    app.main_popup('ErrorPopup()')

            # --- UMOUNT FOLDER ---
            Button:
                text: 'Umount'
                on_press:
                    app.manage_remote(self.text) if\
                    root.ids.remote.active is True and\
                    root.ids.M_folder.active is True and\
                    root.ids.L_folder.active is True else\
                    app.main_popup('ErrorPopup()')

            # --- EXIT ---
            Button:
                text: 'Exit'
                on_press: root.dismiss()
