#:kivy 1.8.0
#:import aspect_ratio app.mod_encode.encode_var.aspect_ratio
#:import deinterlace app.mod_encode.encode_var.deinterlace
#:import deint_cmd app.mod_encode.encode_var.deint_cmd
#:import motion_deint app.mod_encode.encode_var.motion_deint
#:import motion_cmd app.mod_encode.encode_var.motion_cmd
#:import denoise app.mod_encode.encode_var.denoise
#:import denoise_cmd app.mod_encode.encode_var.denoise_cmd
#:import decimate app.mod_encode.encode_var.decimate
#:import decimate_cmd app.mod_encode.encode_var.decimate_cmd
#:import ar_sd app.mod_encode.encode_var.ar_sd
#:import ar_720p app.mod_encode.encode_var.ar_720p
#:import ar_1080p app.mod_encode.encode_var.ar_1080p

# ---------- PICTURE SCREEN ----------
<picture@Widget>:
    pos_hint: {'center_x': .5, 'center_y': .5}
    size_hint: .96, .96
    cols: 1

    # ---------- SOURCE INFOS ----------
    BoxLayout:
        size_hint: 1, .4
        TextInput:
            readonly: True
            padding_x: '20sp'
            cursor_color: 0, 0, 0, .5
            background_color: 0, 0, 0, .5
            foreground_color: 0, 255, 0, 1
            hint_text: 'Source Infos Area'
            hint_text_color: 0, 255, 0, 1
            text:
                '' if app.scan_data is None else\
                (app.scan_data).strip()

    # ---------- AUTO RESIZE ----------
    BoxLayout:
        padding: '8sp'
        orientation: 'horizontal'
        size_hint: 1, .1
        canvas:
            Color:
                rgba: .2, .3, .4, .5
            Rectangle:
                size: self.size
                pos: self.pos

        # --- Check Autoresize ---
        Switch:
            id: auto_resize
            size_hint_x: .20
            touch_control: False
            active:
                True if root.ids.auto_sd.state == 'down' or\
                root.ids.auto_720p.state == 'down' or\
                root.ids.auto_1080p.state == 'down' else False

        # --- Autoresize Label ---
        Label:
            text: 'Auto Resize'
            bold: True
            size_hint_x: .40

        BoxLayout:

            # --- Auto SD button ---
            ToggleButton:
                id: auto_sd
                text: 'Auto SD'
                group: 'auto_resize'
                ar_var: 'ar_sd'

            # --- Auto 720p button ---
            ToggleButton:
                id: auto_720p
                text: 'Auto 720p'
                group: 'auto_resize'
                ar_var: 'ar_720p'

            # --- Auto 1080p button ---
            ToggleButton:
                id: auto_1080p
                text: 'Auto 1080p'
                group: 'auto_resize'
                ar_var: 'ar_1080p'

    # ---------- SAMPLE ASPECT RATIO ----------
    BoxLayout:
        padding: '8sp'
        orientation: 'horizontal'
        size_hint: 1, .1
        canvas:
            Color:
                rgba: .2, .3, .4, 1
            Rectangle:
                size: self.size
                pos: self.pos

        # --- Check SAR ---
        Switch:
            id: check_sar
            size_hint_x: .20
            touch_control: False
            active:
                True if root.ids.pal43.state == 'down' or\
                root.ids.pal169.state == 'down' or\
                root.ids.ntsc43.state == 'down' or\
                root.ids.ntsc169.state == 'down' else False

        # --- SAR Label ---
        Label:
            text: 'Auto SAR'
            bold: True
            size_hint_x: .40

        BoxLayout:
            id: sar_val

            # --- Auto PAL 4:3 ---
            ToggleButton:
                id: pal43
                text: 'PAL 4:3'
                group: 'auto_resize'
                on_release: root.ids.sar_val = '64:45'

            # --- Auto PAL 16:9 ---
            ToggleButton:
                id: pal169
                text: 'PAL 16:9'
                group: 'auto_resize'
                on_release: root.ids.sar_val = '16:15'

            # --- Auto NTSC 4:3 ---
            ToggleButton:
                id: ntsc43
                text: 'NTSC 4:3'
                on_release: root.ids.sar_val = '32:27'

            # --- Auto NTSC 16:9 ---
            ToggleButton:
                id: ntsc169
                text: 'NTSC 16:9'
                on_release: root.ids.sar_val = '8:9'

    # ---------- RESOLUTION ----------
    BoxLayout:
        padding: '8sp'
        orientation: 'horizontal'
        size_hint: 1, .1
        canvas:
            Color:
                rgba: .2, .3, .4, .5
            Rectangle:
                size: self.size
                pos: self.pos

        # --- Check Resolution ---
        Switch:
            id: reso
            size_hint_x: .20
            touch_control: False
            active:
                True if root.ids.check_sar.active is False and\
                root.ids.video_W.text != '' and\
                root.ids.video_H.text != '' else False

        # --- Resolution Label ---
        Label:
            text: 'Resolution'
            bold: True
            size_hint_x: .40

        BoxLayout:

            # --- Aspect Ratio ---
            Slider:
                id: aspect
                min: 0
                max: 5
                step: 1
                value: 0
            Label:
                text:
                    'Custom' if root.ids.check_sar.active is True or\
                    root.ids.auto_resize.active is False else\
                    aspect_ratio[int('{}'.format(aspect.value)
                    .split('.')[0])]
                bold: True

            # --- Resolution WIDTH ---
            Label:
                text: 'Width'
            TextInput:
                id: video_W
                multiline: False
                input_filter: 'int'
                readonly:
                    True if root.ids.auto_resize.active is True or\
                    root.ids.check_sar.active is True else False
                text:
                    'auto' if root.ids.check_sar.active is True else\
                    eval(auto_sd.ar_var)[int('{}'.format(aspect.value)
                    .split('.')[0])].split('x')[0]\
                    if auto_sd.state == 'down' else\
                    eval(auto_720p.ar_var)[int('{}'.format(aspect.value)
                    .split('.')[0])].split('x')[0]\
                    if auto_720p.state == 'down' else\
                    eval(auto_1080p.ar_var)[int('{}'.format(aspect.value)
                    .split('.')[0])].split('x')[0]\
                    if auto_1080p.state == 'down' else ''

            # --- Resolution HEIGHT ---
            Label:
                text: 'Height'
            TextInput:
                id: video_H
                multiline: False
                input_filter: 'int'
                readonly:
                    True if root.ids.auto_resize.active is True or\
                    root.ids.check_sar.active is True else False
                text:
                    'auto' if root.ids.check_sar.active is True else\
                    eval(auto_sd.ar_var)[int('{}'.format(aspect.value)
                    .split('.')[0])].split('x')[1]\
                    if auto_sd.state == 'down' else\
                    eval(auto_720p.ar_var)[int('{}'.format(aspect.value)
                    .split('.')[0])].split('x')[1]\
                    if auto_720p.state == 'down' else\
                    eval(auto_1080p.ar_var)[int('{}'.format(aspect.value)
                    .split('.')[0])].split('x')[1]\
                    if auto_1080p.state == 'down' else ''

    # ---------- CUSTOM CROP ----------
    BoxLayout:
        padding: '8sp'
        orientation: 'horizontal'
        size_hint: 1, .1
        canvas:
            Color:
                rgba: .2, .3, .4, 1
            Rectangle:
                size: self.size
                pos: self.pos

        # --- Check Crop ---
        Switch:
            id: custom_crop
            size_hint_x: .20
            touch_control: False
            active:
                True if root.ids.crop_W.text != '' and\
                root.ids.crop_H.text != '' and\
                root.ids.crop_T.text != '' and\
                root.ids.crop_B.text != '' and\
                root.ids.crop_R.text != '' and\
                root.ids.crop_L.text != '' else False

        # --- Crop Label ---
        Label:
            text: 'Custom Crop'
            bold: True
            size_hint_x: .40

        BoxLayout:

            # --- Crop WIDTH ---
            TextInput:
                id: crop_W
                hint_text: 'Width'
                multiline: False
                input_filter: 'int'

            # --- Crop HEIGHT ---
            TextInput:
                id: crop_H
                hint_text: 'Height'
                multiline: False
                input_filter: 'int'
            Label:

            # --- Crop TOP ---
            TextInput:
                id: crop_T
                hint_text: 'Top'
                multiline: False
                input_type: 'number'

            # --- Crop BOTTOM ---
            TextInput:
                id: crop_B
                hint_text: 'Bottom'
                multiline: False
                input_type: 'number'

            # --- Crop RIGHT ---
            TextInput:
                id: crop_R
                hint_text: 'Right'
                multiline: False
                input_type: 'number'

            # --- Crop LEFT ---
            TextInput:
                id: crop_L
                hint_text: 'Left'
                multiline: False
                input_type: 'number'

    # ---------- DEINTERLACE ----------
    BoxLayout:
        padding: '8sp'
        orientation: 'horizontal'
        size_hint: 1, .1
        canvas:
            Color:
                rgba: .2, .3, .4, .5
            Rectangle:
                size: self.size
                pos: self.pos

        # --- Check Deinterlace ---
        Switch:
            size_hint_x: .20
            touch_control: False
            active:
                True if root.ids.dint.value != 0 else False

        # --- Deinterlace Label ---
        Label:
            text: 'Deinterlace Filter'
            bold: True
            size_hint_x: .40

        BoxLayout:

            # --- Deinterlace Mode ---
            Slider:
                id: dint
                min: 0
                max: 7
                step: 1
                value: 0
            Label:
                text:
                    deinterlace[int('{}'.format(dint.value)
                    .split('.')[0])]
                bold: True

            # --- Custom Deinterlace ---
            TextInput:
                id: deint
                multiline: False
                padding: 5, 8, 0, 0
                font_size: 11
                foreground_color: 255, 0, 0, 1
                hint_text:
                    'FFMPEG Video Filters' if\
                    root.ids.dint.value == 0 else ''
                readonly:
                    True if root.ids.dint.value != 5 else False
                text:
                    deint_cmd[int('{}'.format(root.ids.dint.value)
                    .split('.')[0])]

    # ---------- MOTION DEINTERLACE ----------
    BoxLayout:
        padding: '8sp'
        orientation: 'horizontal'
        size_hint: 1, .1
        canvas:
            Color:
                rgba: .2, .3, .4, 1
            Rectangle:
                size: self.size
                pos: self.pos

        # --- Check Motion ---
        Switch:
            size_hint_x: .20
            touch_control: False
            active:
                True if root.ids.motion.value != 0 else False

        # --- Motion Label ---
        Label:
            text: 'Deinterlace Motion'
            bold: True
            size_hint_x: .40

        BoxLayout:

            # --- Motion Mode ---
            Slider:
                id: motion
                min: 0
                max: 5
                step: 1
                value: 0
            Label:
                text:
                    motion_deint[int('{}'.format(motion.value)
                    .split('.')[0])]
                bold: True

            # --- Custom Motion ---
            TextInput:
                id: motion_d
                multiline: False
                padding: 5, 8, 0, 0
                font_size: 11
                foreground_color: 255, 0, 0, 1
                hint_text:
                    'FFMPEG Video Filters' if\
                    root.ids.motion.value == 0 else ''
                readonly:
                    True if root.ids.motion.value != 4 else False
                text:
                    motion_cmd[int('{}'.format(motion.value)
                    .split('.')[0])]

    # ---------- DECIMATE ----------
    BoxLayout:
        padding: '8sp'
        orientation: 'horizontal'
        size_hint: 1, .1
        canvas:
            Color:
                rgba: .2, .3, .4, .5
            Rectangle:
                size: self.size
                pos: self.pos

        # --- Check Decimate ---
        Switch:
            id: decimate_on
            size_hint_x: .20
            touch_control: False
            active:
                True if root.ids.dcimate.value != 0 else False

        # --- Decimate Label ---
        Label:
            text: 'Decimate Filter'
            bold: True
            size_hint_x: .40

        BoxLayout:

            # --- Decimate Mode ---
            Slider:
                id: dcimate
                min: 0
                max: 2
                step: 1
                value: 0
            Label:
                text:
                    decimate[int('{}'.format(dcimate.value)
                    .split('.')[0])]
                bold: True

            # --- Custom Decimate ---
            TextInput:
                id: decimate
                multiline: False
                padding: 5, 8, 0, 0
                font_size: 11
                foreground_color: 255, 0, 0, 1
                hint_text:
                    'FFMPEG Video Filters' if\
                    root.ids.dcimate.value == 0 else ''
                readonly:
                    True if root.ids.dcimate.value != 2 else False
                text:
                    decimate_cmd[int('{}'.format(dcimate.value)
                    .split('.')[0])]

    # ---------- DENOISE ----------
    BoxLayout:
        padding: '8sp'
        orientation: 'horizontal'
        size_hint: 1, .1
        canvas:
            Color:
                rgba: .2, .3, .4, 1
            Rectangle:
                size: self.size
                pos: self.pos

        # --- Check Denoise ---
        Switch:
            size_hint_x: .20
            touch_control: False
            active:
                True if root.ids.dnoise.value != 0 else False

        # --- Denoise Label ---
        Label:
            text: 'Denoise Filter'
            bold: True
            size_hint_x: .40

        BoxLayout:

            # --- Denoise Mode ---
            Slider:
                id: dnoise
                min: 0
                max: 4
                step: 1
                value: 0
            Label:
                text:
                    denoise[int('{}'.format(dnoise.value)
                    .split('.')[0])]
                bold: True

            # --- Custom Denoise ---
            TextInput:
                id: denoise
                multiline: False
                padding: 5, 8, 0, 0
                font_size: 11
                foreground_color: 255, 0, 0, 1
                hint_text:
                    'FFMPEG Video Filters' if\
                    root.ids.dnoise.value == 0 else ''
                readonly:
                    True if root.ids.dnoise.value != 4 else False
                text:
                    denoise_cmd[int('{}'.format(root.ids.dnoise.value)
                    .split('.')[0])]
