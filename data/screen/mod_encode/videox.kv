#:kivy 1.8.0
#:import v_v app.mod_encode.encode_dict.v_v
#:import u_u app.mod_encode.encode_dict.u_u

# ---------- VIDEO LAYOUT ----------
<videox@Widget>:
    pos_hint: {'center_x': .5, 'center_y': .5}
    size_hint: .97, .96
    spacing: 4
    cols: 1

    # ---------- SOURCE INFOS ----------
    BoxLayout:
        size_hint: 1, .4
        TextInput:
            readonly: True
            padding: 20, 15, 0, 0
            cursor_color: 0, 0, 0, .5
            background_color: 0, 0, 0, .5
            foreground_color: 0, 255, 0, 1
            hint_text: 'Source Infos Area'
            hint_text_color: 0, 255, 0, 1
            text:
                '' if app.scan_encode is None else\
                (app.scan_encode).strip()

    # ---------- VIDEO TRACK ID & TITLE ----------
    BoxLayout:
        padding: 8
        orientation: 'horizontal'
        size_hint: 1, .1
        canvas:
            Color:
                rgba: .1, .1, .1, 1
            Rectangle:
                size: self.size
                pos: self.pos

        # --- Check Track & Title ---
        Switch:
            id: check_vtrack
            size_hint_x: .20
            touch_control: False
            active:
                True if root.ids.video_track_ID.text and\
                root.ids.movie_name.text else False

        # --- Video Label ---
        Label:
            text: 'Video Track'
            bold: True
            size_hint_x: .40

        BoxLayout:

            # --- Video Track ID ---
            TextInput:
                id: video_track_ID
                hint_text: 'Track ID'
                multiline: False
                size_hint_x: .2
                input_filter: 'int'

            # --- Movie Name ---
            TextInput:
                id: movie_name
                hint_text: 'Metadata Title (mediainfo)'
                multiline: False
                text:
                    (app.encode_source).split('/')[-1][:-4]

    # ---------- VIDEO CODEC / CONTAINER ----------
    BoxLayout:
        padding: 8
        orientation: 'horizontal'
        size_hint: 1, .1
        canvas:
            Color:
                rgba: .1, .1, .1, 1
            Rectangle:
                size: self.size
                pos: self.pos

        # --- Check Container ---
        Switch:
            id: check_codec
            size_hint_x: .20
            touch_control: False
            active:
                True if (root.ids.matroska.state == 'down' or
                root.ids.mp4.state == 'down') and\
                (root.ids.x264.state == 'down' or
                root.ids.x265.state == 'down') else False

        # --- Container Label ---
        Label:
            text: 'Container'
            bold: True
            size_hint_x: .40

        BoxLayout:
            id: vcontainer
            valueA: ''
            valueB: ''

            # --- MKV button ---
            ToggleButton:
                id: matroska
                text: 'MATROSKA'
                group: 'v_container'
                on_release: root.ids.vcontainer.valueA = 'matroska'

            # --- MP4 button ---
            ToggleButton:
                id: mp4
                text: 'MPEG-4'
                group: 'v_container'
                on_release: root.ids.vcontainer.valueA = 'mp4'

            # --- x264 button ---
            ToggleButton:
                id: x264
                text: 'x264'
                group: 'v_codec'
                on_release: root.ids.vcontainer.valueB = 'libx264'

            # --- x265 button ---
            ToggleButton:
                id: x265
                text: 'x265'
                group: 'v_codec'
                on_release: root.ids.vcontainer.valueB = 'libx265'

    # ---------- CRF MODE ----------
    BoxLayout:
        padding: 8
        orientation: 'horizontal'
        size_hint: 1, .1
        canvas:
            Color:
                rgba: .1, .1, .1, 1
            Rectangle:
                size: self.size
                pos: self.pos

        # --- Check CRF ---
        Switch:
            id: check_crf
            size_hint_x: .20
            touch_control: False
            active:
                True if root.ids.video_bitrate.text == '' else False

        # --- CRF Label ---
        Label:
            text: 'CRF Level'
            bold: True
            size_hint_x: .40

        # --- CRF Value ---
        BoxLayout:
            Slider:
                id: crf
                min: 0
                max: 51
                step: 1
                value: 0
            Label:
                id: crf_val
                text: '{}'.format(crf.value).split('.')[0]
                bold: True


    # ---------- 2PASS MODE ----------
    BoxLayout:
        padding: 8
        orientation: 'horizontal'
        size_hint: 1, .1
        canvas:
            Color:
                rgba: .1, .1, .1, 1
            Rectangle:
                size: self.size
                pos: self.pos

        # --- Check 2PASS ---
        Switch:
            id: dualpass
            size_hint_x: .20
            touch_control: False
            active:
                False if root.ids.video_bitrate.text == '' else True

        # --- 2PASS Label ---
        Label:
            text: '2PASS Mode'
            bold: True
            size_hint_x: .40

        BoxLayout:

            # --- Video Bitrate ---
            Label:
                text: 'Video Kbps'
            TextInput:
                id: video_bitrate
                multiline: False
                input_filter: 'int'
                text: app.current_bitrate

            # --- Bitrate Calculator button ---
            ToggleButton:
                text: 'Bitrate Calculator'
                on_press: app.toggle_bitrate(self.state)

            # --- Fast First Pass ---
            ToggleButton:
                id: fast1pass
                value:
                    '1' if self.state == 'down' else '0'
                text: 'Fast Firstpass'

    # ---------- BITRATE CALCULATOR ----------
    ScrollView:
        id: bitrate_view
        size_hint_y: None
        height: 0
        BoxLayout:
            padding: 8
            canvas:
                Color:
                    rgba: 0, 0, 0, 1
                Rectangle:
                    size: self.size
                    pos: self.pos

            # --- HOURS ---
            TextInput:
                id: HH
                hint_text: 'HH'
                size_hint: .6, 1
                multiline: False
                input_filter: 'int'

            # --- MINUTES ---
            TextInput:
                id: MM
                hint_text: 'MM'
                size_hint: .6, 1
                multiline: False
                input_filter: 'int'

            # --- SECONDS ---
            TextInput:
                id: SS
                hint_text: 'SS'
                size_hint: .6, 1
                multiline: False
                input_filter: 'int'
            Label:

            # --- Audio Bitrate ---
            Label:
                text: 'Audio'
            Slider:
                size_hint: 3, 1
                id: audio_bit
                min: 0
                max: 14
                step: 1
                value: 11
            Label:
                text:
                    v_v['audio_bitrate'][int('{}'.format(
                    audio_bit.value).split('.')[0])]
                bold: True
            Label:

            # --- Desired Size ---
            Label:
                text: 'Size'
            Slider:
                size_hint: 3, 1
                id: desired_size
                min: 0
                max: 7
                step: 1
                value: 3
            Label:
                text:
                    v_v['fixed_size'][int('{}'.format(
                    desired_size.value).split('.')[0])]
                bold: True
            Label:

            # --- Run Calculator ---
            Button:
                text: 'RUN'
                on_press:
                    if root.ids.HH.text and\
                    root.ids.MM.text and root.ids.SS.text:\
                    u_u['HH'] = root.ids.HH.text;\
                    u_u['MM'] = root.ids.MM.text;\
                    u_u['SS'] = root.ids.SS.text;\
                    u_u['audio_bit'] = root.ids.audio_bit.value;\
                    u_u['desired_size'] = root.ids.desired_size.value;\
                    app.bit_calculator()

    # ---------- FRAMERATE ----------
    BoxLayout:
        padding: 8
        orientation: 'horizontal'
        size_hint: 1, .1
        canvas:
            Color:
                rgba: .2, .3, .4, .5
            Rectangle:
                size: self.size
                pos: self.pos

        # --- Check Framerate ---
        Switch:
            size_hint_x: .20
            touch_control: False
            active: True

        # --- Framerate Label ---
        Label:
            text: 'Framerate'
            bold: True
            size_hint_x: .40

        # --- Framerate Value ---
        BoxLayout:
            Slider:
                id: framerate
                min: 0
                max: 11
                step: 1
                value: 4
            Label:
                id: fram_rate
                text:
                    v_v['framerate'][int('{}'.format(
                    framerate.value).split('.')[0])]
                bold: True

    # ---------- PRESET ----------
    BoxLayout:
        padding: 8
        orientation: 'horizontal'
        size_hint: 1, .1
        canvas:
            Color:
                rgba: .2, .3, .4, 1
            Rectangle:
                size: self.size
                pos: self.pos

        # --- Check Preset ---
        Switch:
            size_hint_x: .20
            touch_control: False
            active:
                True if root.ids.preset.value != 0 else False

        # --- Preset Label ---
        Label:
            text: 'Preset'
            bold: True
            size_hint_x: .40

        # --- Preset Value ---
        BoxLayout:
            Slider:
                id: preset
                min: 0
                max: 9
                step: 1
                value: 0
            Label:
                id: pre_set
                value: '' if self.text == 'Off' else self.text
                text:
                    v_v['preset'][int('{}'.format(
                    preset.value).split('.')[0])]
                bold: True

    # ---------- TUNE ----------
    BoxLayout:
        padding: 8
        orientation: 'horizontal'
        size_hint: 1, .1
        canvas:
            Color:
                rgba: .2, .3, .4, .5
            Rectangle:
                size: self.size
                pos: self.pos

        # --- Check Tune ---
        Switch:
            size_hint_x: .20
            touch_control: False
            active:
                True if root.ids.tune.value != 0 else False

        # --- Tune Label ---
        Label:
            text: 'Tune'
            bold: True
            size_hint_x: .40

        # --- Check Value ---
        BoxLayout:
            Slider:
                id: tune
                min: 0
                max: 7
                step: 1
                value: 0
            Label:
                id: tu_ne
                value: '' if self.text == 'Off' else self.text
                text:
                    v_v['tune'][int('{}'.format(
                    tune.value).split('.')[0])]
                bold: True

    # ---------- PROFILE ----------
    BoxLayout:
        padding: 8
        orientation: 'horizontal'
        size_hint: 1, .1
        canvas:
            Color:
                rgba: .2, .3, .4, 1
            Rectangle:
                size: self.size
                pos: self.pos

        # --- Check Profile ---
        Switch:
            size_hint_x: .20
            touch_control: False
            active:
                True if root.ids.profile.value != 0 else False

        # --- Profile Label ---
        Label:
            text: 'Profile'
            bold: True
            size_hint_x: .40

        # --- Profile Value ---
        BoxLayout:
            Slider:
                id: profile
                min: 0
                max: 3
                step: 1
                value: 0
            Label:
                id: pro_file
                text:
                    v_v['profile'][int('{}'.format(
                    profile.value).split('.')[0])]
                bold: True

    # ---------- LEVEL ----------
    BoxLayout:
        padding: 8
        orientation: 'horizontal'
        size_hint: 1, .1
        canvas:
            Color:
                rgba: .2, .3, .4, .5
            Rectangle:
                size: self.size
                pos: self.pos

        # --- Check Level ---
        Switch:
            size_hint_x: .20
            touch_control: False
            active: True

        # --- Level Label ---
        Label:
            text: 'Level'
            bold: True
            size_hint_x: .40

        # --- Level Value ---
        BoxLayout:
            Slider:
                id: level
                min: 0
                max: 15
                step: 1
                value: 8
            Label:
                id: le_vel
                text:
                    v_v['level'][int('{}'.format(
                    level.value).split('.')[0])]
                bold: True
