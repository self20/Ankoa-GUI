#:kivy 1.8.0
#:import uuid uuid
#:import mp3_bitrate app.mod_encode.encode_var.mp3_bitrate
#:import aac_bitrate app.mod_encode.encode_var.aac_bitrate
#:import ac3_bitrate app.mod_encode.encode_var.ac3_bitrate
#:import sample_rate app.mod_encode.encode_var.sample_rate
#:import audio_gain app.mod_encode.encode_var.audio_gain

# ---------- AUDIO TRACK WIDGET ----------
GridLayout:
    padding: '4sp'
    cols: 2
    rows: 2
    canvas:
        Color:
            rgba: 5, .4, .5, .5
        Rectangle:
            size: self.size
            pos: self.pos

    # ---------- AUDIO TRACK ID & TITLE ----------
    BoxLayout:
        padding: '2sp'
        size_hint: .6, 1

        # --- Check Audio Track ---
        Switch:
            size_hint_x: .2
            touch_control: False
            active:
                True if audio_track_ID.text != '' and\
                audio_track_title.text != '' and\
                (root.ids.mp3.state == 'down' or\
                root.ids.aac.state == 'down' or\
                root.ids.ac3.state == 'down' or\
                root.ids.dts.state == 'down') else False

        # --- DEL Track button ----
        Button:
            text: 'DEL'
            size_hint_x: .1
            on_press: app.del_audio_track(root)

        # --- Audio Track ID ---
        TextInput:
            id: audio_track_ID
            hint_text: 'Track ID'
            multiline: False
            size_hint_x: .2
            input_filter: 'int'

        # --- Audio Track Title ---
        TextInput:
            id: audio_track_title
            hint_text: 'Track Title'
            multiline: False

    # ---------- AUDIO TRACK CODEC ----------
    BoxLayout:
        id: acodec
        value: ''
        group: uuid.uuid4()
        padding: '2sp'
        size_hint: .4, 1

        # --- MP3 ---
        ToggleButton:
            id: mp3
            text: 'MP3'
            group: root.ids.acodec.group
            on_release: root.ids.acodec.value = 'mp3'

        # --- AAC ---
        ToggleButton:
            id: aac
            text: 'AAC'
            group: root.ids.acodec.group
            on_release: root.ids.acodec.value = 'aac'

        # --- AC3 ---
        ToggleButton:
            id: ac3
            text: 'AC3'
            group: root.ids.acodec.group
            on_release: root.ids.acodec.value = 'ac3'

        # --- DTS ---
        ToggleButton:
            id: dts
            text: 'DTS'
            group: root.ids.acodec.group
            on_release: root.ids.acodec.value = 'dts'

    # ---------- AUDIO TRACK INFOS ----------
    BoxLayout:
        padding: '2sp'
        size_hint: .9, 1

        # --- Audio Bitrate ---
        Label:
            text: 'Bitrate'
            bold: True
        Slider:
            id: audiobit
            min: 0
            max:
                13 if root.ids.mp3.state == 'down' else\
                11 if root.ids.aac.state == 'down' else\
                9 if root.ids.ac3.state == 'down' else 0
            step: 1
            value: 0
        Label:
            id: abitrate
            text:
                mp3_bitrate[int('{}'.format(audiobit.value)\
                .split('.')[0])] if root.ids.mp3.state == 'down' else\
                aac_bitrate[int('{}'.format(audiobit.value)\
                .split('.')[0])] if root.ids.aac.state == 'down' else\
                ac3_bitrate[int('{}'.format(audiobit.value)\
                .split('.')[0])] if root.ids.ac3.state == 'down' else\
                'Original'
            bold: True
        Label:

        # --- Samplerate ---
        Label:
            text: 'Samplerate'
            bold: True
        Slider:
            id: samplerate
            min: 0
            max: 4
            step: 1
            value: 3
        Label:
            id: sample_rate
            text:
                sample_rate[int('{}'.format(samplerate.value)
                .split('.')[0])]
            bold: True

    BoxLayout:
        padding: '2sp'
        size_hint: .1, 1
        Label:

        # --- Audio Gain ---
        Label:
            text: 'Gain'
            bold: True
        Slider:
            id: audiogain
            min: 0
            max: 40
            step: 1
            value: 20
        Label:
            id: gain
            text:
                audio_gain[int('{}'.format(audiogain.value)
                .split('.')[0])]
            bold: True
